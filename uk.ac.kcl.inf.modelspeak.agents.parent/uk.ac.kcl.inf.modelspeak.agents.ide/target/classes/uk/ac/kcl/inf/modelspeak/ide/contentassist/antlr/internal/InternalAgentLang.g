/*
 * generated by Xtext 2.35.0
 */
grammar InternalAgentLang;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package uk.ac.kcl.inf.modelspeak.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package uk.ac.kcl.inf.modelspeak.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import uk.ac.kcl.inf.modelspeak.services.AgentLangGrammarAccess;

}
@parser::members {
	private AgentLangGrammarAccess grammarAccess;

	public void setGrammarAccess(AgentLangGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleGame
entryRuleGame
:
{ before(grammarAccess.getGameRule()); }
	 ruleGame
{ after(grammarAccess.getGameRule()); } 
	 EOF 
;

// Rule Game
ruleGame 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGameAccess().getMovesAssignment()); }
		(rule__Game__MovesAssignment)*
		{ after(grammarAccess.getGameAccess().getMovesAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMove
entryRuleMove
:
{ before(grammarAccess.getMoveRule()); }
	 ruleMove
{ after(grammarAccess.getMoveRule()); } 
	 EOF 
;

// Rule Move
ruleMove 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMoveAccess().getAlternatives()); }
		(rule__Move__Alternatives)
		{ after(grammarAccess.getMoveAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleResearchQuestion
entryRuleResearchQuestion
:
{ before(grammarAccess.getResearchQuestionRule()); }
	 ruleResearchQuestion
{ after(grammarAccess.getResearchQuestionRule()); } 
	 EOF 
;

// Rule ResearchQuestion
ruleResearchQuestion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResearchQuestionAccess().getGroup()); }
		(rule__ResearchQuestion__Group__0)
		{ after(grammarAccess.getResearchQuestionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRequirement
entryRuleRequirement
:
{ before(grammarAccess.getRequirementRule()); }
	 ruleRequirement
{ after(grammarAccess.getRequirementRule()); } 
	 EOF 
;

// Rule Requirement
ruleRequirement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRequirementAccess().getGroup()); }
		(rule__Requirement__Group__0)
		{ after(grammarAccess.getRequirementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExperiment
entryRuleExperiment
:
{ before(grammarAccess.getExperimentRule()); }
	 ruleExperiment
{ after(grammarAccess.getExperimentRule()); } 
	 EOF 
;

// Rule Experiment
ruleExperiment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExperimentAccess().getGroup()); }
		(rule__Experiment__Group__0)
		{ after(grammarAccess.getExperimentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTheory
entryRuleTheory
:
{ before(grammarAccess.getTheoryRule()); }
	 ruleTheory
{ after(grammarAccess.getTheoryRule()); } 
	 EOF 
;

// Rule Theory
ruleTheory 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTheoryAccess().getAlternatives()); }
		(rule__Theory__Alternatives)
		{ after(grammarAccess.getTheoryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiTheory
entryRuleMultiTheory
:
{ before(grammarAccess.getMultiTheoryRule()); }
	 ruleMultiTheory
{ after(grammarAccess.getMultiTheoryRule()); } 
	 EOF 
;

// Rule MultiTheory
ruleMultiTheory 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiTheoryAccess().getGroup()); }
		(rule__MultiTheory__Group__0)
		{ after(grammarAccess.getMultiTheoryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGeneralTheory
entryRuleGeneralTheory
:
{ before(grammarAccess.getGeneralTheoryRule()); }
	 ruleGeneralTheory
{ after(grammarAccess.getGeneralTheoryRule()); } 
	 EOF 
;

// Rule GeneralTheory
ruleGeneralTheory 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGeneralTheoryAccess().getGroup()); }
		(rule__GeneralTheory__Group__0)
		{ after(grammarAccess.getGeneralTheoryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteratureReference
entryRuleLiteratureReference
:
{ before(grammarAccess.getLiteratureReferenceRule()); }
	 ruleLiteratureReference
{ after(grammarAccess.getLiteratureReferenceRule()); } 
	 EOF 
;

// Rule LiteratureReference
ruleLiteratureReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteratureReferenceAccess().getGroup()); }
		(rule__LiteratureReference__Group__0)
		{ after(grammarAccess.getLiteratureReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProposeRQ
entryRuleProposeRQ
:
{ before(grammarAccess.getProposeRQRule()); }
	 ruleProposeRQ
{ after(grammarAccess.getProposeRQRule()); } 
	 EOF 
;

// Rule ProposeRQ
ruleProposeRQ 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProposeRQAccess().getGroup()); }
		(rule__ProposeRQ__Group__0)
		{ after(grammarAccess.getProposeRQAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProposeRequirement
entryRuleProposeRequirement
:
{ before(grammarAccess.getProposeRequirementRule()); }
	 ruleProposeRequirement
{ after(grammarAccess.getProposeRequirementRule()); } 
	 EOF 
;

// Rule ProposeRequirement
ruleProposeRequirement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProposeRequirementAccess().getGroup()); }
		(rule__ProposeRequirement__Group__0)
		{ after(grammarAccess.getProposeRequirementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttackRequirement
entryRuleAttackRequirement
:
{ before(grammarAccess.getAttackRequirementRule()); }
	 ruleAttackRequirement
{ after(grammarAccess.getAttackRequirementRule()); } 
	 EOF 
;

// Rule AttackRequirement
ruleAttackRequirement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttackRequirementAccess().getGroup()); }
		(rule__AttackRequirement__Group__0)
		{ after(grammarAccess.getAttackRequirementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRedefineRequirement
entryRuleRedefineRequirement
:
{ before(grammarAccess.getRedefineRequirementRule()); }
	 ruleRedefineRequirement
{ after(grammarAccess.getRedefineRequirementRule()); } 
	 EOF 
;

// Rule RedefineRequirement
ruleRedefineRequirement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRedefineRequirementAccess().getGroup()); }
		(rule__RedefineRequirement__Group__0)
		{ after(grammarAccess.getRedefineRequirementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRetractRequirement
entryRuleRetractRequirement
:
{ before(grammarAccess.getRetractRequirementRule()); }
	 ruleRetractRequirement
{ after(grammarAccess.getRetractRequirementRule()); } 
	 EOF 
;

// Rule RetractRequirement
ruleRetractRequirement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRetractRequirementAccess().getGroup()); }
		(rule__RetractRequirement__Group__0)
		{ after(grammarAccess.getRetractRequirementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSupportRequirement
entryRuleSupportRequirement
:
{ before(grammarAccess.getSupportRequirementRule()); }
	 ruleSupportRequirement
{ after(grammarAccess.getSupportRequirementRule()); } 
	 EOF 
;

// Rule SupportRequirement
ruleSupportRequirement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSupportRequirementAccess().getGroup()); }
		(rule__SupportRequirement__Group__0)
		{ after(grammarAccess.getSupportRequirementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProposeModel
entryRuleProposeModel
:
{ before(grammarAccess.getProposeModelRule()); }
	 ruleProposeModel
{ after(grammarAccess.getProposeModelRule()); } 
	 EOF 
;

// Rule ProposeModel
ruleProposeModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProposeModelAccess().getGroup()); }
		(rule__ProposeModel__Group__0)
		{ after(grammarAccess.getProposeModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSupportModel
entryRuleSupportModel
:
{ before(grammarAccess.getSupportModelRule()); }
	 ruleSupportModel
{ after(grammarAccess.getSupportModelRule()); } 
	 EOF 
;

// Rule SupportModel
ruleSupportModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSupportModelAccess().getGroup()); }
		(rule__SupportModel__Group__0)
		{ after(grammarAccess.getSupportModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReplaceModel
entryRuleReplaceModel
:
{ before(grammarAccess.getReplaceModelRule()); }
	 ruleReplaceModel
{ after(grammarAccess.getReplaceModelRule()); } 
	 EOF 
;

// Rule ReplaceModel
ruleReplaceModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReplaceModelAccess().getGroup()); }
		(rule__ReplaceModel__Group__0)
		{ after(grammarAccess.getReplaceModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCounterModel
entryRuleCounterModel
:
{ before(grammarAccess.getCounterModelRule()); }
	 ruleCounterModel
{ after(grammarAccess.getCounterModelRule()); } 
	 EOF 
;

// Rule CounterModel
ruleCounterModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCounterModelAccess().getGroup()); }
		(rule__CounterModel__Group__0)
		{ after(grammarAccess.getCounterModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttackModel
entryRuleAttackModel
:
{ before(grammarAccess.getAttackModelRule()); }
	 ruleAttackModel
{ after(grammarAccess.getAttackModelRule()); } 
	 EOF 
;

// Rule AttackModel
ruleAttackModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttackModelAccess().getGroup()); }
		(rule__AttackModel__Group__0)
		{ after(grammarAccess.getAttackModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReviseRequirement
entryRuleReviseRequirement
:
{ before(grammarAccess.getReviseRequirementRule()); }
	 ruleReviseRequirement
{ after(grammarAccess.getReviseRequirementRule()); } 
	 EOF 
;

// Rule ReviseRequirement
ruleReviseRequirement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReviseRequirementAccess().getGroup()); }
		(rule__ReviseRequirement__Group__0)
		{ after(grammarAccess.getReviseRequirementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProposeExperiment
entryRuleProposeExperiment
:
{ before(grammarAccess.getProposeExperimentRule()); }
	 ruleProposeExperiment
{ after(grammarAccess.getProposeExperimentRule()); } 
	 EOF 
;

// Rule ProposeExperiment
ruleProposeExperiment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProposeExperimentAccess().getGroup()); }
		(rule__ProposeExperiment__Group__0)
		{ after(grammarAccess.getProposeExperimentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSupportExperiment
entryRuleSupportExperiment
:
{ before(grammarAccess.getSupportExperimentRule()); }
	 ruleSupportExperiment
{ after(grammarAccess.getSupportExperimentRule()); } 
	 EOF 
;

// Rule SupportExperiment
ruleSupportExperiment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSupportExperimentAccess().getGroup()); }
		(rule__SupportExperiment__Group__0)
		{ after(grammarAccess.getSupportExperimentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttackExperiment
entryRuleAttackExperiment
:
{ before(grammarAccess.getAttackExperimentRule()); }
	 ruleAttackExperiment
{ after(grammarAccess.getAttackExperimentRule()); } 
	 EOF 
;

// Rule AttackExperiment
ruleAttackExperiment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttackExperimentAccess().getGroup()); }
		(rule__AttackExperiment__Group__0)
		{ after(grammarAccess.getAttackExperimentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRetractExperiment
entryRuleRetractExperiment
:
{ before(grammarAccess.getRetractExperimentRule()); }
	 ruleRetractExperiment
{ after(grammarAccess.getRetractExperimentRule()); } 
	 EOF 
;

// Rule RetractExperiment
ruleRetractExperiment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRetractExperimentAccess().getGroup()); }
		(rule__RetractExperiment__Group__0)
		{ after(grammarAccess.getRetractExperimentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStudyDone
entryRuleStudyDone
:
{ before(grammarAccess.getStudyDoneRule()); }
	 ruleStudyDone
{ after(grammarAccess.getStudyDoneRule()); } 
	 EOF 
;

// Rule StudyDone
ruleStudyDone 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStudyDoneAccess().getGroup()); }
		(rule__StudyDone__Group__0)
		{ after(grammarAccess.getStudyDoneAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNotConvinced
entryRuleNotConvinced
:
{ before(grammarAccess.getNotConvincedRule()); }
	 ruleNotConvinced
{ after(grammarAccess.getNotConvincedRule()); } 
	 EOF 
;

// Rule NotConvinced
ruleNotConvinced 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNotConvincedAccess().getGroup()); }
		(rule__NotConvinced__Group__0)
		{ after(grammarAccess.getNotConvincedAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveAccess().getProposeRQParserRuleCall_0()); }
		ruleProposeRQ
		{ after(grammarAccess.getMoveAccess().getProposeRQParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getMoveAccess().getProposeRequirementParserRuleCall_1()); }
		ruleProposeRequirement
		{ after(grammarAccess.getMoveAccess().getProposeRequirementParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getMoveAccess().getAttackRequirementParserRuleCall_2()); }
		ruleAttackRequirement
		{ after(grammarAccess.getMoveAccess().getAttackRequirementParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getMoveAccess().getRedefineRequirementParserRuleCall_3()); }
		ruleRedefineRequirement
		{ after(grammarAccess.getMoveAccess().getRedefineRequirementParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getMoveAccess().getRetractRequirementParserRuleCall_4()); }
		ruleRetractRequirement
		{ after(grammarAccess.getMoveAccess().getRetractRequirementParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getMoveAccess().getSupportRequirementParserRuleCall_5()); }
		ruleSupportRequirement
		{ after(grammarAccess.getMoveAccess().getSupportRequirementParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getMoveAccess().getProposeModelParserRuleCall_6()); }
		ruleProposeModel
		{ after(grammarAccess.getMoveAccess().getProposeModelParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getMoveAccess().getSupportModelParserRuleCall_7()); }
		ruleSupportModel
		{ after(grammarAccess.getMoveAccess().getSupportModelParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getMoveAccess().getReplaceModelParserRuleCall_8()); }
		ruleReplaceModel
		{ after(grammarAccess.getMoveAccess().getReplaceModelParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getMoveAccess().getCounterModelParserRuleCall_9()); }
		ruleCounterModel
		{ after(grammarAccess.getMoveAccess().getCounterModelParserRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getMoveAccess().getAttackModelParserRuleCall_10()); }
		ruleAttackModel
		{ after(grammarAccess.getMoveAccess().getAttackModelParserRuleCall_10()); }
	)
	|
	(
		{ before(grammarAccess.getMoveAccess().getReviseRequirementParserRuleCall_11()); }
		ruleReviseRequirement
		{ after(grammarAccess.getMoveAccess().getReviseRequirementParserRuleCall_11()); }
	)
	|
	(
		{ before(grammarAccess.getMoveAccess().getProposeExperimentParserRuleCall_12()); }
		ruleProposeExperiment
		{ after(grammarAccess.getMoveAccess().getProposeExperimentParserRuleCall_12()); }
	)
	|
	(
		{ before(grammarAccess.getMoveAccess().getSupportExperimentParserRuleCall_13()); }
		ruleSupportExperiment
		{ after(grammarAccess.getMoveAccess().getSupportExperimentParserRuleCall_13()); }
	)
	|
	(
		{ before(grammarAccess.getMoveAccess().getAttackExperimentParserRuleCall_14()); }
		ruleAttackExperiment
		{ after(grammarAccess.getMoveAccess().getAttackExperimentParserRuleCall_14()); }
	)
	|
	(
		{ before(grammarAccess.getMoveAccess().getRetractExperimentParserRuleCall_15()); }
		ruleRetractExperiment
		{ after(grammarAccess.getMoveAccess().getRetractExperimentParserRuleCall_15()); }
	)
	|
	(
		{ before(grammarAccess.getMoveAccess().getStudyDoneParserRuleCall_16()); }
		ruleStudyDone
		{ after(grammarAccess.getMoveAccess().getStudyDoneParserRuleCall_16()); }
	)
	|
	(
		{ before(grammarAccess.getMoveAccess().getNotConvincedParserRuleCall_17()); }
		ruleNotConvinced
		{ after(grammarAccess.getMoveAccess().getNotConvincedParserRuleCall_17()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTheoryAccess().getGeneralTheoryParserRuleCall_0()); }
		ruleGeneralTheory
		{ after(grammarAccess.getTheoryAccess().getGeneralTheoryParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTheoryAccess().getLiteratureReferenceParserRuleCall_1()); }
		ruleLiteratureReference
		{ after(grammarAccess.getTheoryAccess().getLiteratureReferenceParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTheoryAccess().getMultiTheoryParserRuleCall_2()); }
		ruleMultiTheory
		{ after(grammarAccess.getTheoryAccess().getMultiTheoryParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResearchQuestion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResearchQuestion__Group__0__Impl
	rule__ResearchQuestion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResearchQuestion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResearchQuestionAccess().getNameAssignment_0()); }
	(rule__ResearchQuestion__NameAssignment_0)
	{ after(grammarAccess.getResearchQuestionAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResearchQuestion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResearchQuestion__Group__1__Impl
	rule__ResearchQuestion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ResearchQuestion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResearchQuestionAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getResearchQuestionAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResearchQuestion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResearchQuestion__Group__2__Impl
	rule__ResearchQuestion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ResearchQuestion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResearchQuestionAccess().getWhatKeyword_2()); }
	'What'
	{ after(grammarAccess.getResearchQuestionAccess().getWhatKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResearchQuestion__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResearchQuestion__Group__3__Impl
	rule__ResearchQuestion__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ResearchQuestion__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResearchQuestionAccess().getMechanismKeyword_3()); }
	'mechanism'
	{ after(grammarAccess.getResearchQuestionAccess().getMechanismKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResearchQuestion__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResearchQuestion__Group__4__Impl
	rule__ResearchQuestion__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ResearchQuestion__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResearchQuestionAccess().getBestKeyword_4()); }
	'best'
	{ after(grammarAccess.getResearchQuestionAccess().getBestKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResearchQuestion__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResearchQuestion__Group__5__Impl
	rule__ResearchQuestion__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ResearchQuestion__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResearchQuestionAccess().getExplainsKeyword_5()); }
	'explains'
	{ after(grammarAccess.getResearchQuestionAccess().getExplainsKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResearchQuestion__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResearchQuestion__Group__6__Impl
	rule__ResearchQuestion__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ResearchQuestion__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResearchQuestionAccess().getEffectAssignment_6()); }
	(rule__ResearchQuestion__EffectAssignment_6)
	{ after(grammarAccess.getResearchQuestionAccess().getEffectAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResearchQuestion__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResearchQuestion__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResearchQuestion__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResearchQuestionAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getResearchQuestionAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getNameAssignment_0()); }
	(rule__Model__NameAssignment_0)
	{ after(grammarAccess.getModelAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGroup_1()); }
	(rule__Model__Group_1__0)?
	{ after(grammarAccess.getModelAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getLessThanSignKeyword_2()); }
	'<'
	{ after(grammarAccess.getModelAccess().getLessThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__3__Impl
	rule__Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getIncorporatesKeyword_3()); }
	'incorporates'
	{ after(grammarAccess.getModelAccess().getIncorporatesKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__4__Impl
	rule__Model__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getMechanismKeyword_4()); }
	'mechanism'
	{ after(grammarAccess.getModelAccess().getMechanismKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__5__Impl
	rule__Model__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getMechanismAssignment_5()); }
	(rule__Model__MechanismAssignment_5)
	{ after(grammarAccess.getModelAccess().getMechanismAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGreaterThanSignKeyword_6()); }
	'>'
	{ after(grammarAccess.getModelAccess().getGreaterThanSignKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_1__0__Impl
	rule__Model__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_1_0()); }
	'{'
	{ after(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_1__1__Impl
	rule__Model__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getContentAssignment_1_1()); }
	(rule__Model__ContentAssignment_1_1)
	{ after(grammarAccess.getModelAccess().getContentAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_1_2()); }
	'}'
	{ after(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Requirement__Group__0__Impl
	rule__Requirement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequirementAccess().getNameAssignment_0()); }
	(rule__Requirement__NameAssignment_0)
	{ after(grammarAccess.getRequirementAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Requirement__Group__1__Impl
	rule__Requirement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequirementAccess().getGroup_1()); }
	(rule__Requirement__Group_1__0)?
	{ after(grammarAccess.getRequirementAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Requirement__Group__2__Impl
	rule__Requirement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequirementAccess().getLessThanSignKeyword_2()); }
	'<'
	{ after(grammarAccess.getRequirementAccess().getLessThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Requirement__Group__3__Impl
	rule__Requirement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequirementAccess().getModelsKeyword_3()); }
	'Models'
	{ after(grammarAccess.getRequirementAccess().getModelsKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Requirement__Group__4__Impl
	rule__Requirement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequirementAccess().getMustKeyword_4()); }
	'must'
	{ after(grammarAccess.getRequirementAccess().getMustKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Requirement__Group__5__Impl
	rule__Requirement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequirementAccess().getReplicateKeyword_5()); }
	'replicate'
	{ after(grammarAccess.getRequirementAccess().getReplicateKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Requirement__Group__6__Impl
	rule__Requirement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequirementAccess().getDataDescriptionAssignment_6()); }
	(rule__Requirement__DataDescriptionAssignment_6)
	{ after(grammarAccess.getRequirementAccess().getDataDescriptionAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Requirement__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequirementAccess().getGreaterThanSignKeyword_7()); }
	'>'
	{ after(grammarAccess.getRequirementAccess().getGreaterThanSignKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Requirement__Group_1__0__Impl
	rule__Requirement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequirementAccess().getLeftCurlyBracketKeyword_1_0()); }
	'{'
	{ after(grammarAccess.getRequirementAccess().getLeftCurlyBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Requirement__Group_1__1__Impl
	rule__Requirement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequirementAccess().getContentAssignment_1_1()); }
	(rule__Requirement__ContentAssignment_1_1)
	{ after(grammarAccess.getRequirementAccess().getContentAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Requirement__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequirementAccess().getRightCurlyBracketKeyword_1_2()); }
	'}'
	{ after(grammarAccess.getRequirementAccess().getRightCurlyBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Experiment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Experiment__Group__0__Impl
	rule__Experiment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExperimentAccess().getNameAssignment_0()); }
	(rule__Experiment__NameAssignment_0)
	{ after(grammarAccess.getExperimentAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Experiment__Group__1__Impl
	rule__Experiment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExperimentAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getExperimentAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Experiment__Group__2__Impl
	rule__Experiment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExperimentAccess().getContentAssignment_2()); }
	(rule__Experiment__ContentAssignment_2)
	{ after(grammarAccess.getExperimentAccess().getContentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Experiment__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExperimentAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getExperimentAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiTheory__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiTheory__Group__0__Impl
	rule__MultiTheory__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiTheory__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiTheoryAccess().getNameAssignment_0()); }
	(rule__MultiTheory__NameAssignment_0)
	{ after(grammarAccess.getMultiTheoryAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiTheory__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiTheory__Group__1__Impl
	rule__MultiTheory__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiTheory__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiTheoryAccess().getLeftCurlyBracketLeftCurlyBracketKeyword_1()); }
	'{{'
	{ after(grammarAccess.getMultiTheoryAccess().getLeftCurlyBracketLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiTheory__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiTheory__Group__2__Impl
	rule__MultiTheory__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiTheory__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiTheoryAccess().getTheoriesAssignment_2()); }
	(rule__MultiTheory__TheoriesAssignment_2)
	{ after(grammarAccess.getMultiTheoryAccess().getTheoriesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiTheory__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiTheory__Group__3__Impl
	rule__MultiTheory__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiTheory__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getMultiTheoryAccess().getGroup_3()); }
		(rule__MultiTheory__Group_3__0)
		{ after(grammarAccess.getMultiTheoryAccess().getGroup_3()); }
	)
	(
		{ before(grammarAccess.getMultiTheoryAccess().getGroup_3()); }
		(rule__MultiTheory__Group_3__0)*
		{ after(grammarAccess.getMultiTheoryAccess().getGroup_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiTheory__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiTheory__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiTheory__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiTheoryAccess().getRightCurlyBracketRightCurlyBracketKeyword_4()); }
	'}}'
	{ after(grammarAccess.getMultiTheoryAccess().getRightCurlyBracketRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiTheory__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiTheory__Group_3__0__Impl
	rule__MultiTheory__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiTheory__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiTheoryAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getMultiTheoryAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiTheory__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiTheory__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiTheory__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiTheoryAccess().getTheoriesAssignment_3_1()); }
	(rule__MultiTheory__TheoriesAssignment_3_1)
	{ after(grammarAccess.getMultiTheoryAccess().getTheoriesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GeneralTheory__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralTheory__Group__0__Impl
	rule__GeneralTheory__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralTheory__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralTheoryAccess().getNameAssignment_0()); }
	(rule__GeneralTheory__NameAssignment_0)
	{ after(grammarAccess.getGeneralTheoryAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralTheory__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralTheory__Group__1__Impl
	rule__GeneralTheory__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralTheory__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralTheoryAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getGeneralTheoryAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralTheory__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralTheory__Group__2__Impl
	rule__GeneralTheory__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralTheory__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralTheoryAccess().getContentAssignment_2()); }
	(rule__GeneralTheory__ContentAssignment_2)
	{ after(grammarAccess.getGeneralTheoryAccess().getContentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralTheory__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralTheory__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralTheory__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralTheoryAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getGeneralTheoryAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteratureReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteratureReference__Group__0__Impl
	rule__LiteratureReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteratureReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteratureReferenceAccess().getNameAssignment_0()); }
	(rule__LiteratureReference__NameAssignment_0)
	{ after(grammarAccess.getLiteratureReferenceAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteratureReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteratureReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteratureReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteratureReferenceAccess().getRefAssignment_1()); }
	(rule__LiteratureReference__RefAssignment_1)
	{ after(grammarAccess.getLiteratureReferenceAccess().getRefAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProposeRQ__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProposeRQ__Group__0__Impl
	rule__ProposeRQ__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeRQ__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProposeRQAccess().getProposeResearchQuestionKeyword_0()); }
	'proposeResearchQuestion'
	{ after(grammarAccess.getProposeRQAccess().getProposeResearchQuestionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeRQ__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProposeRQ__Group__1__Impl
	rule__ProposeRQ__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeRQ__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProposeRQAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getProposeRQAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeRQ__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProposeRQ__Group__2__Impl
	rule__ProposeRQ__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeRQ__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProposeRQAccess().getRqAssignment_2()); }
	(rule__ProposeRQ__RqAssignment_2)
	{ after(grammarAccess.getProposeRQAccess().getRqAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeRQ__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProposeRQ__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeRQ__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProposeRQAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getProposeRQAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProposeRequirement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProposeRequirement__Group__0__Impl
	rule__ProposeRequirement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeRequirement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProposeRequirementAccess().getProposeRequirementKeyword_0()); }
	'proposeRequirement'
	{ after(grammarAccess.getProposeRequirementAccess().getProposeRequirementKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeRequirement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProposeRequirement__Group__1__Impl
	rule__ProposeRequirement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeRequirement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProposeRequirementAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getProposeRequirementAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeRequirement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProposeRequirement__Group__2__Impl
	rule__ProposeRequirement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeRequirement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProposeRequirementAccess().getRequirementAssignment_2()); }
	(rule__ProposeRequirement__RequirementAssignment_2)
	{ after(grammarAccess.getProposeRequirementAccess().getRequirementAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeRequirement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProposeRequirement__Group__3__Impl
	rule__ProposeRequirement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeRequirement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProposeRequirementAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getProposeRequirementAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeRequirement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProposeRequirement__Group__4__Impl
	rule__ProposeRequirement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeRequirement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProposeRequirementAccess().getRqAssignment_4()); }
	(rule__ProposeRequirement__RqAssignment_4)
	{ after(grammarAccess.getProposeRequirementAccess().getRqAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeRequirement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProposeRequirement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeRequirement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProposeRequirementAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getProposeRequirementAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttackRequirement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttackRequirement__Group__0__Impl
	rule__AttackRequirement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackRequirement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttackRequirementAccess().getAttackRequirementKeyword_0()); }
	'AttackRequirement'
	{ after(grammarAccess.getAttackRequirementAccess().getAttackRequirementKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackRequirement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttackRequirement__Group__1__Impl
	rule__AttackRequirement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackRequirement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttackRequirementAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getAttackRequirementAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackRequirement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttackRequirement__Group__2__Impl
	rule__AttackRequirement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackRequirement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttackRequirementAccess().getRequirementAssignment_2()); }
	(rule__AttackRequirement__RequirementAssignment_2)
	{ after(grammarAccess.getAttackRequirementAccess().getRequirementAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackRequirement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttackRequirement__Group__3__Impl
	rule__AttackRequirement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackRequirement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttackRequirementAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getAttackRequirementAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackRequirement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttackRequirement__Group__4__Impl
	rule__AttackRequirement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackRequirement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttackRequirementAccess().getTheoryAssignment_4()); }
	(rule__AttackRequirement__TheoryAssignment_4)
	{ after(grammarAccess.getAttackRequirementAccess().getTheoryAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackRequirement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttackRequirement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackRequirement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttackRequirementAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getAttackRequirementAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RedefineRequirement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RedefineRequirement__Group__0__Impl
	rule__RedefineRequirement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RedefineRequirement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRedefineRequirementAccess().getRedefineRequirementKeyword_0()); }
	'RedefineRequirement'
	{ after(grammarAccess.getRedefineRequirementAccess().getRedefineRequirementKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RedefineRequirement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RedefineRequirement__Group__1__Impl
	rule__RedefineRequirement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RedefineRequirement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRedefineRequirementAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getRedefineRequirementAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RedefineRequirement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RedefineRequirement__Group__2__Impl
	rule__RedefineRequirement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RedefineRequirement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRedefineRequirementAccess().getRequirementAssignment_2()); }
	(rule__RedefineRequirement__RequirementAssignment_2)
	{ after(grammarAccess.getRedefineRequirementAccess().getRequirementAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RedefineRequirement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RedefineRequirement__Group__3__Impl
	rule__RedefineRequirement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RedefineRequirement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRedefineRequirementAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getRedefineRequirementAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RedefineRequirement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RedefineRequirement__Group__4__Impl
	rule__RedefineRequirement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RedefineRequirement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRedefineRequirementAccess().getNewRequirementAssignment_4()); }
	(rule__RedefineRequirement__NewRequirementAssignment_4)
	{ after(grammarAccess.getRedefineRequirementAccess().getNewRequirementAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RedefineRequirement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RedefineRequirement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RedefineRequirement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRedefineRequirementAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getRedefineRequirementAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RetractRequirement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RetractRequirement__Group__0__Impl
	rule__RetractRequirement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RetractRequirement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRetractRequirementAccess().getRetractRequirementKeyword_0()); }
	'RetractRequirement'
	{ after(grammarAccess.getRetractRequirementAccess().getRetractRequirementKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RetractRequirement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RetractRequirement__Group__1__Impl
	rule__RetractRequirement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RetractRequirement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRetractRequirementAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getRetractRequirementAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RetractRequirement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RetractRequirement__Group__2__Impl
	rule__RetractRequirement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RetractRequirement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRetractRequirementAccess().getRequirementAssignment_2()); }
	(rule__RetractRequirement__RequirementAssignment_2)
	{ after(grammarAccess.getRetractRequirementAccess().getRequirementAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RetractRequirement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RetractRequirement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RetractRequirement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRetractRequirementAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getRetractRequirementAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SupportRequirement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SupportRequirement__Group__0__Impl
	rule__SupportRequirement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportRequirement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSupportRequirementAccess().getSupportRequirementKeyword_0()); }
	'supportRequirement'
	{ after(grammarAccess.getSupportRequirementAccess().getSupportRequirementKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportRequirement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SupportRequirement__Group__1__Impl
	rule__SupportRequirement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportRequirement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSupportRequirementAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getSupportRequirementAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportRequirement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SupportRequirement__Group__2__Impl
	rule__SupportRequirement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportRequirement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSupportRequirementAccess().getRequirementAssignment_2()); }
	(rule__SupportRequirement__RequirementAssignment_2)
	{ after(grammarAccess.getSupportRequirementAccess().getRequirementAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportRequirement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SupportRequirement__Group__3__Impl
	rule__SupportRequirement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportRequirement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSupportRequirementAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getSupportRequirementAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportRequirement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SupportRequirement__Group__4__Impl
	rule__SupportRequirement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportRequirement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSupportRequirementAccess().getTheoryAssignment_4()); }
	(rule__SupportRequirement__TheoryAssignment_4)
	{ after(grammarAccess.getSupportRequirementAccess().getTheoryAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportRequirement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SupportRequirement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportRequirement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSupportRequirementAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getSupportRequirementAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProposeModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProposeModel__Group__0__Impl
	rule__ProposeModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProposeModelAccess().getProposeModelKeyword_0()); }
	'proposeModel'
	{ after(grammarAccess.getProposeModelAccess().getProposeModelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProposeModel__Group__1__Impl
	rule__ProposeModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProposeModelAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getProposeModelAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProposeModel__Group__2__Impl
	rule__ProposeModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProposeModelAccess().getModelAssignment_2()); }
	(rule__ProposeModel__ModelAssignment_2)
	{ after(grammarAccess.getProposeModelAccess().getModelAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeModel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProposeModel__Group__3__Impl
	rule__ProposeModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeModel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProposeModelAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getProposeModelAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeModel__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProposeModel__Group__4__Impl
	rule__ProposeModel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeModel__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProposeModelAccess().getRequirementAssignment_4()); }
	(rule__ProposeModel__RequirementAssignment_4)
	{ after(grammarAccess.getProposeModelAccess().getRequirementAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeModel__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProposeModel__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeModel__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProposeModelAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getProposeModelAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SupportModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SupportModel__Group__0__Impl
	rule__SupportModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSupportModelAccess().getSupportModelKeyword_0()); }
	'supportModel'
	{ after(grammarAccess.getSupportModelAccess().getSupportModelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SupportModel__Group__1__Impl
	rule__SupportModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSupportModelAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getSupportModelAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SupportModel__Group__2__Impl
	rule__SupportModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSupportModelAccess().getModelAssignment_2()); }
	(rule__SupportModel__ModelAssignment_2)
	{ after(grammarAccess.getSupportModelAccess().getModelAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportModel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SupportModel__Group__3__Impl
	rule__SupportModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportModel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSupportModelAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getSupportModelAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportModel__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SupportModel__Group__4__Impl
	rule__SupportModel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportModel__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSupportModelAccess().getTheoryAssignment_4()); }
	(rule__SupportModel__TheoryAssignment_4)
	{ after(grammarAccess.getSupportModelAccess().getTheoryAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportModel__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SupportModel__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportModel__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSupportModelAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getSupportModelAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReplaceModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplaceModel__Group__0__Impl
	rule__ReplaceModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplaceModelAccess().getReplaceModelKeyword_0()); }
	'ReplaceModel'
	{ after(grammarAccess.getReplaceModelAccess().getReplaceModelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplaceModel__Group__1__Impl
	rule__ReplaceModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplaceModelAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getReplaceModelAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplaceModel__Group__2__Impl
	rule__ReplaceModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplaceModelAccess().getModelAssignment_2()); }
	(rule__ReplaceModel__ModelAssignment_2)
	{ after(grammarAccess.getReplaceModelAccess().getModelAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceModel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplaceModel__Group__3__Impl
	rule__ReplaceModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceModel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplaceModelAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getReplaceModelAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceModel__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplaceModel__Group__4__Impl
	rule__ReplaceModel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceModel__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplaceModelAccess().getNewModelAssignment_4()); }
	(rule__ReplaceModel__NewModelAssignment_4)
	{ after(grammarAccess.getReplaceModelAccess().getNewModelAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceModel__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplaceModel__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceModel__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplaceModelAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getReplaceModelAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CounterModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CounterModel__Group__0__Impl
	rule__CounterModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CounterModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCounterModelAccess().getCounterModelKeyword_0()); }
	'CounterModel'
	{ after(grammarAccess.getCounterModelAccess().getCounterModelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CounterModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CounterModel__Group__1__Impl
	rule__CounterModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CounterModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCounterModelAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getCounterModelAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CounterModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CounterModel__Group__2__Impl
	rule__CounterModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CounterModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCounterModelAccess().getModelAssignment_2()); }
	(rule__CounterModel__ModelAssignment_2)
	{ after(grammarAccess.getCounterModelAccess().getModelAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CounterModel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CounterModel__Group__3__Impl
	rule__CounterModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CounterModel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCounterModelAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getCounterModelAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CounterModel__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CounterModel__Group__4__Impl
	rule__CounterModel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CounterModel__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCounterModelAccess().getExperimentAssignment_4()); }
	(rule__CounterModel__ExperimentAssignment_4)
	{ after(grammarAccess.getCounterModelAccess().getExperimentAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CounterModel__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CounterModel__Group__5__Impl
	rule__CounterModel__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CounterModel__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCounterModelAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getCounterModelAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CounterModel__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CounterModel__Group__6__Impl
	rule__CounterModel__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__CounterModel__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCounterModelAccess().getRequirementAssignment_6()); }
	(rule__CounterModel__RequirementAssignment_6)
	{ after(grammarAccess.getCounterModelAccess().getRequirementAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CounterModel__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CounterModel__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CounterModel__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCounterModelAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getCounterModelAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttackModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttackModel__Group__0__Impl
	rule__AttackModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttackModelAccess().getAttackModelKeyword_0()); }
	'AttackModel'
	{ after(grammarAccess.getAttackModelAccess().getAttackModelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttackModel__Group__1__Impl
	rule__AttackModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttackModelAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getAttackModelAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttackModel__Group__2__Impl
	rule__AttackModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttackModelAccess().getModelAssignment_2()); }
	(rule__AttackModel__ModelAssignment_2)
	{ after(grammarAccess.getAttackModelAccess().getModelAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackModel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttackModel__Group__3__Impl
	rule__AttackModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackModel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttackModelAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getAttackModelAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackModel__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttackModel__Group__4__Impl
	rule__AttackModel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackModel__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttackModelAccess().getTheoryAssignment_4()); }
	(rule__AttackModel__TheoryAssignment_4)
	{ after(grammarAccess.getAttackModelAccess().getTheoryAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackModel__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttackModel__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackModel__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttackModelAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getAttackModelAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReviseRequirement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReviseRequirement__Group__0__Impl
	rule__ReviseRequirement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReviseRequirement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReviseRequirementAccess().getReviseRequirementKeyword_0()); }
	'ReviseRequirement'
	{ after(grammarAccess.getReviseRequirementAccess().getReviseRequirementKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReviseRequirement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReviseRequirement__Group__1__Impl
	rule__ReviseRequirement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReviseRequirement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReviseRequirementAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getReviseRequirementAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReviseRequirement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReviseRequirement__Group__2__Impl
	rule__ReviseRequirement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReviseRequirement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReviseRequirementAccess().getModelAssignment_2()); }
	(rule__ReviseRequirement__ModelAssignment_2)
	{ after(grammarAccess.getReviseRequirementAccess().getModelAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReviseRequirement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReviseRequirement__Group__3__Impl
	rule__ReviseRequirement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ReviseRequirement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReviseRequirementAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getReviseRequirementAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReviseRequirement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReviseRequirement__Group__4__Impl
	rule__ReviseRequirement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ReviseRequirement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReviseRequirementAccess().getRequirementAssignment_4()); }
	(rule__ReviseRequirement__RequirementAssignment_4)
	{ after(grammarAccess.getReviseRequirementAccess().getRequirementAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReviseRequirement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReviseRequirement__Group__5__Impl
	rule__ReviseRequirement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ReviseRequirement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReviseRequirementAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getReviseRequirementAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReviseRequirement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReviseRequirement__Group__6__Impl
	rule__ReviseRequirement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ReviseRequirement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReviseRequirementAccess().getNewRequirementAssignment_6()); }
	(rule__ReviseRequirement__NewRequirementAssignment_6)
	{ after(grammarAccess.getReviseRequirementAccess().getNewRequirementAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReviseRequirement__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReviseRequirement__Group__7__Impl
	rule__ReviseRequirement__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ReviseRequirement__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReviseRequirementAccess().getCommaKeyword_7()); }
	','
	{ after(grammarAccess.getReviseRequirementAccess().getCommaKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReviseRequirement__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReviseRequirement__Group__8__Impl
	rule__ReviseRequirement__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ReviseRequirement__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReviseRequirementAccess().getExperimentAssignment_8()); }
	(rule__ReviseRequirement__ExperimentAssignment_8)
	{ after(grammarAccess.getReviseRequirementAccess().getExperimentAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReviseRequirement__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReviseRequirement__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReviseRequirement__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReviseRequirementAccess().getRightParenthesisKeyword_9()); }
	')'
	{ after(grammarAccess.getReviseRequirementAccess().getRightParenthesisKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProposeExperiment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProposeExperiment__Group__0__Impl
	rule__ProposeExperiment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeExperiment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProposeExperimentAccess().getProposeExperimentKeyword_0()); }
	'ProposeExperiment'
	{ after(grammarAccess.getProposeExperimentAccess().getProposeExperimentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeExperiment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProposeExperiment__Group__1__Impl
	rule__ProposeExperiment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeExperiment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProposeExperimentAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getProposeExperimentAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeExperiment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProposeExperiment__Group__2__Impl
	rule__ProposeExperiment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeExperiment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProposeExperimentAccess().getModelAssignment_2()); }
	(rule__ProposeExperiment__ModelAssignment_2)
	{ after(grammarAccess.getProposeExperimentAccess().getModelAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeExperiment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProposeExperiment__Group__3__Impl
	rule__ProposeExperiment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeExperiment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProposeExperimentAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getProposeExperimentAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeExperiment__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProposeExperiment__Group__4__Impl
	rule__ProposeExperiment__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeExperiment__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProposeExperimentAccess().getExperimentAssignment_4()); }
	(rule__ProposeExperiment__ExperimentAssignment_4)
	{ after(grammarAccess.getProposeExperimentAccess().getExperimentAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeExperiment__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProposeExperiment__Group__5__Impl
	rule__ProposeExperiment__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeExperiment__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProposeExperimentAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getProposeExperimentAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeExperiment__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProposeExperiment__Group__6__Impl
	rule__ProposeExperiment__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeExperiment__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProposeExperimentAccess().getRequirementAssignment_6()); }
	(rule__ProposeExperiment__RequirementAssignment_6)
	{ after(grammarAccess.getProposeExperimentAccess().getRequirementAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeExperiment__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProposeExperiment__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeExperiment__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProposeExperimentAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getProposeExperimentAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SupportExperiment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SupportExperiment__Group__0__Impl
	rule__SupportExperiment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportExperiment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSupportExperimentAccess().getSupportExperimentKeyword_0()); }
	'SupportExperiment'
	{ after(grammarAccess.getSupportExperimentAccess().getSupportExperimentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportExperiment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SupportExperiment__Group__1__Impl
	rule__SupportExperiment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportExperiment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSupportExperimentAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getSupportExperimentAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportExperiment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SupportExperiment__Group__2__Impl
	rule__SupportExperiment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportExperiment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSupportExperimentAccess().getExperimentAssignment_2()); }
	(rule__SupportExperiment__ExperimentAssignment_2)
	{ after(grammarAccess.getSupportExperimentAccess().getExperimentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportExperiment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SupportExperiment__Group__3__Impl
	rule__SupportExperiment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportExperiment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSupportExperimentAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getSupportExperimentAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportExperiment__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SupportExperiment__Group__4__Impl
	rule__SupportExperiment__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportExperiment__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSupportExperimentAccess().getTheoryAssignment_4()); }
	(rule__SupportExperiment__TheoryAssignment_4)
	{ after(grammarAccess.getSupportExperimentAccess().getTheoryAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportExperiment__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SupportExperiment__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportExperiment__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSupportExperimentAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getSupportExperimentAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttackExperiment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttackExperiment__Group__0__Impl
	rule__AttackExperiment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackExperiment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttackExperimentAccess().getAttackExperimentKeyword_0()); }
	'AttackExperiment'
	{ after(grammarAccess.getAttackExperimentAccess().getAttackExperimentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackExperiment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttackExperiment__Group__1__Impl
	rule__AttackExperiment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackExperiment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttackExperimentAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getAttackExperimentAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackExperiment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttackExperiment__Group__2__Impl
	rule__AttackExperiment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackExperiment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttackExperimentAccess().getExperimentAssignment_2()); }
	(rule__AttackExperiment__ExperimentAssignment_2)
	{ after(grammarAccess.getAttackExperimentAccess().getExperimentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackExperiment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttackExperiment__Group__3__Impl
	rule__AttackExperiment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackExperiment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttackExperimentAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getAttackExperimentAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackExperiment__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttackExperiment__Group__4__Impl
	rule__AttackExperiment__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackExperiment__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttackExperimentAccess().getTheoryAssignment_4()); }
	(rule__AttackExperiment__TheoryAssignment_4)
	{ after(grammarAccess.getAttackExperimentAccess().getTheoryAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackExperiment__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttackExperiment__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackExperiment__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttackExperimentAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getAttackExperimentAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RetractExperiment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RetractExperiment__Group__0__Impl
	rule__RetractExperiment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RetractExperiment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRetractExperimentAccess().getRetractExperimentKeyword_0()); }
	'RetractExperiment'
	{ after(grammarAccess.getRetractExperimentAccess().getRetractExperimentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RetractExperiment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RetractExperiment__Group__1__Impl
	rule__RetractExperiment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RetractExperiment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRetractExperimentAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getRetractExperimentAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RetractExperiment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RetractExperiment__Group__2__Impl
	rule__RetractExperiment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RetractExperiment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRetractExperimentAccess().getExperimentAssignment_2()); }
	(rule__RetractExperiment__ExperimentAssignment_2)
	{ after(grammarAccess.getRetractExperimentAccess().getExperimentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RetractExperiment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RetractExperiment__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RetractExperiment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRetractExperimentAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getRetractExperimentAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StudyDone__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StudyDone__Group__0__Impl
	rule__StudyDone__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StudyDone__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStudyDoneAccess().getStudyDoneAction_0()); }
	()
	{ after(grammarAccess.getStudyDoneAccess().getStudyDoneAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StudyDone__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StudyDone__Group__1__Impl
	rule__StudyDone__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StudyDone__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStudyDoneAccess().getStudyDoneKeyword_1()); }
	'StudyDone'
	{ after(grammarAccess.getStudyDoneAccess().getStudyDoneKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StudyDone__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StudyDone__Group__2__Impl
	rule__StudyDone__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StudyDone__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStudyDoneAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getStudyDoneAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StudyDone__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StudyDone__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StudyDone__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStudyDoneAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getStudyDoneAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NotConvinced__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotConvinced__Group__0__Impl
	rule__NotConvinced__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NotConvinced__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotConvincedAccess().getNotConvincedKeyword_0()); }
	'NotConvinced'
	{ after(grammarAccess.getNotConvincedAccess().getNotConvincedKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotConvinced__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotConvinced__Group__1__Impl
	rule__NotConvinced__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NotConvinced__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotConvincedAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getNotConvincedAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotConvinced__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotConvinced__Group__2__Impl
	rule__NotConvinced__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NotConvinced__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotConvincedAccess().getModelAssignment_2()); }
	(rule__NotConvinced__ModelAssignment_2)
	{ after(grammarAccess.getNotConvincedAccess().getModelAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotConvinced__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotConvinced__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NotConvinced__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotConvincedAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getNotConvincedAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Game__MovesAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGameAccess().getMovesMoveParserRuleCall_0()); }
		ruleMove
		{ after(grammarAccess.getGameAccess().getMovesMoveParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResearchQuestion__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResearchQuestionAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getResearchQuestionAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResearchQuestion__EffectAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResearchQuestionAccess().getEffectSTRINGTerminalRuleCall_6_0()); }
		RULE_STRING
		{ after(grammarAccess.getResearchQuestionAccess().getEffectSTRINGTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ContentAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getContentSTRINGTerminalRuleCall_1_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getModelAccess().getContentSTRINGTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__MechanismAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getMechanismSTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getModelAccess().getMechanismSTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequirementAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getRequirementAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__ContentAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequirementAccess().getContentSTRINGTerminalRuleCall_1_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getRequirementAccess().getContentSTRINGTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__DataDescriptionAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequirementAccess().getDataDescriptionSTRINGTerminalRuleCall_6_0()); }
		RULE_STRING
		{ after(grammarAccess.getRequirementAccess().getDataDescriptionSTRINGTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExperimentAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getExperimentAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__ContentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExperimentAccess().getContentSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getExperimentAccess().getContentSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiTheory__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiTheoryAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getMultiTheoryAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiTheory__TheoriesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiTheoryAccess().getTheoriesTheoryParserRuleCall_2_0()); }
		ruleTheory
		{ after(grammarAccess.getMultiTheoryAccess().getTheoriesTheoryParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiTheory__TheoriesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiTheoryAccess().getTheoriesTheoryParserRuleCall_3_1_0()); }
		ruleTheory
		{ after(grammarAccess.getMultiTheoryAccess().getTheoriesTheoryParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralTheory__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralTheoryAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getGeneralTheoryAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralTheory__ContentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralTheoryAccess().getContentSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getGeneralTheoryAccess().getContentSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteratureReference__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteratureReferenceAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getLiteratureReferenceAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteratureReference__RefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteratureReferenceAccess().getRefLITREFTerminalRuleCall_1_0()); }
		RULE_LITREF
		{ after(grammarAccess.getLiteratureReferenceAccess().getRefLITREFTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeRQ__RqAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProposeRQAccess().getRqResearchQuestionParserRuleCall_2_0()); }
		ruleResearchQuestion
		{ after(grammarAccess.getProposeRQAccess().getRqResearchQuestionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeRequirement__RequirementAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProposeRequirementAccess().getRequirementRequirementParserRuleCall_2_0()); }
		ruleRequirement
		{ after(grammarAccess.getProposeRequirementAccess().getRequirementRequirementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeRequirement__RqAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProposeRequirementAccess().getRqResearchQuestionCrossReference_4_0()); }
		(
			{ before(grammarAccess.getProposeRequirementAccess().getRqResearchQuestionIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getProposeRequirementAccess().getRqResearchQuestionIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getProposeRequirementAccess().getRqResearchQuestionCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackRequirement__RequirementAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttackRequirementAccess().getRequirementRequirementCrossReference_2_0()); }
		(
			{ before(grammarAccess.getAttackRequirementAccess().getRequirementRequirementIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAttackRequirementAccess().getRequirementRequirementIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getAttackRequirementAccess().getRequirementRequirementCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackRequirement__TheoryAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttackRequirementAccess().getTheoryTheoryParserRuleCall_4_0()); }
		ruleTheory
		{ after(grammarAccess.getAttackRequirementAccess().getTheoryTheoryParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RedefineRequirement__RequirementAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRedefineRequirementAccess().getRequirementRequirementCrossReference_2_0()); }
		(
			{ before(grammarAccess.getRedefineRequirementAccess().getRequirementRequirementIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRedefineRequirementAccess().getRequirementRequirementIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getRedefineRequirementAccess().getRequirementRequirementCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RedefineRequirement__NewRequirementAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRedefineRequirementAccess().getNewRequirementRequirementParserRuleCall_4_0()); }
		ruleRequirement
		{ after(grammarAccess.getRedefineRequirementAccess().getNewRequirementRequirementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RetractRequirement__RequirementAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRetractRequirementAccess().getRequirementRequirementCrossReference_2_0()); }
		(
			{ before(grammarAccess.getRetractRequirementAccess().getRequirementRequirementIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRetractRequirementAccess().getRequirementRequirementIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getRetractRequirementAccess().getRequirementRequirementCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportRequirement__RequirementAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSupportRequirementAccess().getRequirementRequirementCrossReference_2_0()); }
		(
			{ before(grammarAccess.getSupportRequirementAccess().getRequirementRequirementIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSupportRequirementAccess().getRequirementRequirementIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getSupportRequirementAccess().getRequirementRequirementCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportRequirement__TheoryAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSupportRequirementAccess().getTheoryTheoryParserRuleCall_4_0()); }
		ruleTheory
		{ after(grammarAccess.getSupportRequirementAccess().getTheoryTheoryParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeModel__ModelAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProposeModelAccess().getModelModelParserRuleCall_2_0()); }
		ruleModel
		{ after(grammarAccess.getProposeModelAccess().getModelModelParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeModel__RequirementAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProposeModelAccess().getRequirementRequirementCrossReference_4_0()); }
		(
			{ before(grammarAccess.getProposeModelAccess().getRequirementRequirementIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getProposeModelAccess().getRequirementRequirementIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getProposeModelAccess().getRequirementRequirementCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportModel__ModelAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSupportModelAccess().getModelModelCrossReference_2_0()); }
		(
			{ before(grammarAccess.getSupportModelAccess().getModelModelIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSupportModelAccess().getModelModelIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getSupportModelAccess().getModelModelCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportModel__TheoryAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSupportModelAccess().getTheoryTheoryParserRuleCall_4_0()); }
		ruleTheory
		{ after(grammarAccess.getSupportModelAccess().getTheoryTheoryParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceModel__ModelAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReplaceModelAccess().getModelModelCrossReference_2_0()); }
		(
			{ before(grammarAccess.getReplaceModelAccess().getModelModelIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getReplaceModelAccess().getModelModelIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getReplaceModelAccess().getModelModelCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceModel__NewModelAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReplaceModelAccess().getNewModelModelParserRuleCall_4_0()); }
		ruleModel
		{ after(grammarAccess.getReplaceModelAccess().getNewModelModelParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CounterModel__ModelAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCounterModelAccess().getModelModelCrossReference_2_0()); }
		(
			{ before(grammarAccess.getCounterModelAccess().getModelModelIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCounterModelAccess().getModelModelIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getCounterModelAccess().getModelModelCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CounterModel__ExperimentAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCounterModelAccess().getExperimentExperimentParserRuleCall_4_0()); }
		ruleExperiment
		{ after(grammarAccess.getCounterModelAccess().getExperimentExperimentParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CounterModel__RequirementAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCounterModelAccess().getRequirementRequirementCrossReference_6_0()); }
		(
			{ before(grammarAccess.getCounterModelAccess().getRequirementRequirementIDTerminalRuleCall_6_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCounterModelAccess().getRequirementRequirementIDTerminalRuleCall_6_0_1()); }
		)
		{ after(grammarAccess.getCounterModelAccess().getRequirementRequirementCrossReference_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackModel__ModelAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttackModelAccess().getModelModelCrossReference_2_0()); }
		(
			{ before(grammarAccess.getAttackModelAccess().getModelModelIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAttackModelAccess().getModelModelIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getAttackModelAccess().getModelModelCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackModel__TheoryAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttackModelAccess().getTheoryTheoryParserRuleCall_4_0()); }
		ruleTheory
		{ after(grammarAccess.getAttackModelAccess().getTheoryTheoryParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReviseRequirement__ModelAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReviseRequirementAccess().getModelModelCrossReference_2_0()); }
		(
			{ before(grammarAccess.getReviseRequirementAccess().getModelModelIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getReviseRequirementAccess().getModelModelIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getReviseRequirementAccess().getModelModelCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReviseRequirement__RequirementAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReviseRequirementAccess().getRequirementRequirementCrossReference_4_0()); }
		(
			{ before(grammarAccess.getReviseRequirementAccess().getRequirementRequirementIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getReviseRequirementAccess().getRequirementRequirementIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getReviseRequirementAccess().getRequirementRequirementCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReviseRequirement__NewRequirementAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReviseRequirementAccess().getNewRequirementRequirementParserRuleCall_6_0()); }
		ruleRequirement
		{ after(grammarAccess.getReviseRequirementAccess().getNewRequirementRequirementParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReviseRequirement__ExperimentAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReviseRequirementAccess().getExperimentExperimentCrossReference_8_0()); }
		(
			{ before(grammarAccess.getReviseRequirementAccess().getExperimentExperimentIDTerminalRuleCall_8_0_1()); }
			RULE_ID
			{ after(grammarAccess.getReviseRequirementAccess().getExperimentExperimentIDTerminalRuleCall_8_0_1()); }
		)
		{ after(grammarAccess.getReviseRequirementAccess().getExperimentExperimentCrossReference_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeExperiment__ModelAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProposeExperimentAccess().getModelModelCrossReference_2_0()); }
		(
			{ before(grammarAccess.getProposeExperimentAccess().getModelModelIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getProposeExperimentAccess().getModelModelIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getProposeExperimentAccess().getModelModelCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeExperiment__ExperimentAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProposeExperimentAccess().getExperimentExperimentParserRuleCall_4_0()); }
		ruleExperiment
		{ after(grammarAccess.getProposeExperimentAccess().getExperimentExperimentParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProposeExperiment__RequirementAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProposeExperimentAccess().getRequirementRequirementCrossReference_6_0()); }
		(
			{ before(grammarAccess.getProposeExperimentAccess().getRequirementRequirementIDTerminalRuleCall_6_0_1()); }
			RULE_ID
			{ after(grammarAccess.getProposeExperimentAccess().getRequirementRequirementIDTerminalRuleCall_6_0_1()); }
		)
		{ after(grammarAccess.getProposeExperimentAccess().getRequirementRequirementCrossReference_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportExperiment__ExperimentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSupportExperimentAccess().getExperimentExperimentCrossReference_2_0()); }
		(
			{ before(grammarAccess.getSupportExperimentAccess().getExperimentExperimentIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSupportExperimentAccess().getExperimentExperimentIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getSupportExperimentAccess().getExperimentExperimentCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SupportExperiment__TheoryAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSupportExperimentAccess().getTheoryTheoryParserRuleCall_4_0()); }
		ruleTheory
		{ after(grammarAccess.getSupportExperimentAccess().getTheoryTheoryParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackExperiment__ExperimentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttackExperimentAccess().getExperimentExperimentCrossReference_2_0()); }
		(
			{ before(grammarAccess.getAttackExperimentAccess().getExperimentExperimentIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAttackExperimentAccess().getExperimentExperimentIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getAttackExperimentAccess().getExperimentExperimentCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttackExperiment__TheoryAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttackExperimentAccess().getTheoryTheoryParserRuleCall_4_0()); }
		ruleTheory
		{ after(grammarAccess.getAttackExperimentAccess().getTheoryTheoryParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RetractExperiment__ExperimentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRetractExperimentAccess().getExperimentExperimentCrossReference_2_0()); }
		(
			{ before(grammarAccess.getRetractExperimentAccess().getExperimentExperimentIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRetractExperimentAccess().getExperimentExperimentIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getRetractExperimentAccess().getExperimentExperimentCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotConvinced__ModelAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNotConvincedAccess().getModelModelCrossReference_2_0()); }
		(
			{ before(grammarAccess.getNotConvincedAccess().getModelModelIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getNotConvincedAccess().getModelModelIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getNotConvincedAccess().getModelModelCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_LITREF : '[' ~(']')* ']';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
